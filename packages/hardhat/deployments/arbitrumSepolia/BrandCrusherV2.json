{
  "address": "0xe2B9d5D88787a6687040d485a983d069c389B405",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "advertiser",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "roundId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "brandName",
          "type": "string"
        }
      ],
      "name": "AdRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "player",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "verified",
          "type": "bool"
        }
      ],
      "name": "CivicVerificationUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PlatformFeeCollected",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "winner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PrizeClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roundId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "winner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "prize",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "platformFee",
          "type": "uint256"
        }
      ],
      "name": "RoundEnded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roundId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        }
      ],
      "name": "RoundStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "player",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "score",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "roundId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "civicVerified",
          "type": "bool"
        }
      ],
      "name": "ScoreSubmitted",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BASE_MULTIPLIER",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CIVIC_BONUS_MULTIPLIER",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_AD_PRICE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_PRIZE_POOL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PLATFORM_FEE_PERCENTAGE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PRIZE_PERCENTAGE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ROUND_DURATION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimPrize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentRoundId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endRound",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getActivePlayersCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentPrizePool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentRoundInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "roundId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalAdPool",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "prizePool",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "playerCount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "player",
          "type": "address"
        }
      ],
      "name": "getPlayerBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "player",
          "type": "address"
        }
      ],
      "name": "getPlayerStats",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "totalGames",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "highScore",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalScore",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "civicVerified",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "totalWinnings",
              "type": "uint256"
            }
          ],
          "internalType": "struct BrandCrusherV2.PlayerStats",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_roundId",
          "type": "uint256"
        }
      ],
      "name": "getRoundAds",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "advertiser",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "adContent",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "brandName",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "roundId",
              "type": "uint256"
            }
          ],
          "internalType": "struct BrandCrusherV2.Advertisement[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_roundId",
          "type": "uint256"
        }
      ],
      "name": "getRoundDifficulty",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_roundId",
          "type": "uint256"
        }
      ],
      "name": "getRoundScores",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "player",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "score",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "roundId",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "civicVerified",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct BrandCrusherV2.PlayerScore[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauseRound",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "playerBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "playerStats",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalGames",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "highScore",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalScore",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "civicVerified",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "totalWinnings",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_brandName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_adContent",
          "type": "string"
        }
      ],
      "name": "registerAdvertisement",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "roundAds",
      "outputs": [
        {
          "internalType": "address",
          "name": "advertiser",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "adContent",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "brandName",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "roundId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "roundScores",
      "outputs": [
        {
          "internalType": "address",
          "name": "player",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "score",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "roundId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "civicVerified",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "rounds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "roundId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalAdPool",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "prizePool",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "platformFee",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "winner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "winningScore",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "playerCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_score",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_civicVerified",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "_playerName",
          "type": "string"
        }
      ],
      "name": "submitScore",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "finalScore",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalPlatformFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "verified",
          "type": "bool"
        }
      ],
      "name": "updateCivicVerification",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawPlatformFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x62d56de34bd0ebf8c69700b3442a0c1820fe814d2685253bfd935af296303537",
  "receipt": {
    "to": null,
    "from": "0x048222bEFE8A5CD34E139cC9221cb7AB6cF0Bdaf",
    "contractAddress": "0xe2B9d5D88787a6687040d485a983d069c389B405",
    "transactionIndex": 5,
    "gasUsed": "2018858",
    "logsBloom": "0x
    "blockHash": "0xc329fe65a26d672e2093a6393eda8e788e60829f7099ca9cf367472516a33f48",
    "transactionHash": "0x62d56de34bd0ebf8c69700b3442a0c1820fe814d2685253bfd935af296303537",
    "logs": [
      {
        "transactionIndex": 5,
        "blockNumber": 206040582,
        "transactionHash": "0x62d56de34bd0ebf8c69700b3442a0c1820fe814d2685253bfd935af296303537",
        "address": "0xe2B9d5D88787a6687040d485a983d069c389B405",
        "topics": [
          "0xa359b664a68acd8839e42112eb50eff3408165e15074fde89ddb58a0db2e691d",
          "0x0000000000000000000000000000000000000000000000000000000000000001"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000068f405d10000000000000000000000000000000000000000000000000000000068f406fd",
        "logIndex": 1,
        "blockHash": "0xc329fe65a26d672e2093a6393eda8e788e60829f7099ca9cf367472516a33f48"
      }
    ],
    "blockNumber": 206040582,
    "cumulativeGasUsed": "2258683",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "d36d4232c1556ed3ad55cbb836a53f50",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"advertiser\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"brandName\",\"type\":\"string\"}],\"name\":\"AdRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"name\":\"CivicVerificationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PlatformFeeCollected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PrizeClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"prize\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"platformFee\",\"type\":\"uint256\"}],\"name\":\"RoundEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"RoundStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"civicVerified\",\"type\":\"bool\"}],\"name\":\"ScoreSubmitted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BASE_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CIVIC_BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_AD_PRICE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_PRIZE_POOL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PLATFORM_FEE_PERCENTAGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRIZE_PERCENTAGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROUND_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimPrize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentRoundId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endRound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActivePlayersCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentPrizePool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentRoundInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAdPool\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prizePool\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"playerCount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"getPlayerBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"getPlayerStats\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"totalGames\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"highScore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalScore\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"civicVerified\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalWinnings\",\"type\":\"uint256\"}],\"internalType\":\"struct BrandCrusherV2.PlayerStats\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_roundId\",\"type\":\"uint256\"}],\"name\":\"getRoundAds\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"advertiser\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"adContent\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"brandName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"internalType\":\"struct BrandCrusherV2.Advertisement[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_roundId\",\"type\":\"uint256\"}],\"name\":\"getRoundDifficulty\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_roundId\",\"type\":\"uint256\"}],\"name\":\"getRoundScores\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"civicVerified\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct BrandCrusherV2.PlayerScore[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseRound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"playerBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"playerStats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalGames\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"highScore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalScore\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"civicVerified\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalWinnings\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_brandName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_adContent\",\"type\":\"string\"}],\"name\":\"registerAdvertisement\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"roundAds\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"advertiser\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"adContent\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"brandName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"roundScores\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"civicVerified\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rounds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAdPool\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prizePool\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"platformFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"winningScore\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"playerCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_score\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_civicVerified\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"_playerName\",\"type\":\"string\"}],\"name\":\"submitScore\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"finalScore\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPlatformFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"name\":\"updateCivicVerification\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawPlatformFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BrandCrusherV2.sol\":\"BrandCrusherV2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BrandCrusherV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\ncontract BrandCrusherV2 {\\n    // Core structures\\n    struct Advertisement {\\n        address advertiser;\\n        uint256 amount;          // Amount paid in ETH\\n        string adContent;       // IPFS hash or URL\\n        string brandName;\\n        uint256 timestamp;\\n        bool isActive;\\n        uint256 roundId;\\n    }\\n    \\n    struct GameRound {\\n        uint256 roundId;\\n        uint256 startTime;\\n        uint256 endTime;\\n        uint256 totalAdPool;\\n        uint256 prizePool;       // 70% of totalAdPool\\n        uint256 platformFee;     // 30% of totalAdPool\\n        address winner;\\n        uint256 winningScore;\\n        bool isActive;\\n        uint256 playerCount;\\n    }\\n    \\n    struct PlayerScore {\\n        address player;\\n        uint256 score;\\n        uint256 roundId;\\n        bool civicVerified;\\n        uint256 timestamp;\\n    }\\n    \\n    struct PlayerStats {\\n        uint256 totalGames;\\n        uint256 highScore;\\n        uint256 totalScore;\\n        bool civicVerified;\\n        uint256 totalWinnings;\\n    }\\n    \\n    // State variables\\n    mapping(uint256 => GameRound) public rounds;\\n    mapping(uint256 => PlayerScore[]) public roundScores;\\n    mapping(uint256 => Advertisement[]) public roundAds;\\n    mapping(address => PlayerStats) public playerStats;\\n    mapping(address => uint256) public playerBalances;\\n    \\n    // Round management\\n    uint256 public currentRoundId;\\n    uint256 public constant ROUND_DURATION = 300; // 5 minutes in seconds\\n    uint256 public constant MIN_AD_PRICE = 0.0003 ether;  // ~$1\\n    uint256 public constant MIN_PRIZE_POOL = 0.003 ether; // ~$10\\n    uint256 public constant PRIZE_PERCENTAGE = 70;\\n    uint256 public constant PLATFORM_FEE_PERCENTAGE = 30;\\n    uint256 public constant CIVIC_BONUS_MULTIPLIER = 150; // 1.5x = 150%\\n    uint256 public constant BASE_MULTIPLIER = 100;\\n    \\n    address public owner;\\n    uint256 public totalPlatformFees;\\n    \\n    // Events\\n    event AdRegistered(address indexed advertiser, uint256 amount, uint256 roundId, string brandName);\\n    event RoundStarted(uint256 indexed roundId, uint256 startTime, uint256 endTime);\\n    event ScoreSubmitted(address indexed player, uint256 score, uint256 roundId, bool civicVerified);\\n    event RoundEnded(uint256 indexed roundId, address winner, uint256 prize, uint256 platformFee);\\n    event PrizeClaimed(address indexed winner, uint256 amount);\\n    event PlatformFeeCollected(uint256 amount);\\n    event CivicVerificationUpdated(address indexed player, bool verified);\\n    \\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"Only owner can call this function\\\");\\n        _;\\n    }\\n    \\n    modifier onlyActiveRound() {\\n        require(rounds[currentRoundId].isActive, \\\"No active round\\\");\\n        require(block.timestamp <= rounds[currentRoundId].endTime, \\\"Round has ended\\\");\\n        _;\\n    }\\n    \\n    constructor() {\\n        owner = msg.sender;\\n        _startNewRound();\\n    }\\n    \\n    // Register advertisement with payment\\n    function registerAdvertisement(\\n        string memory _brandName,\\n        string memory _adContent\\n    ) external payable {\\n        require(msg.value >= MIN_AD_PRICE, \\\"Payment below minimum\\\");\\n        require(rounds[currentRoundId].isActive, \\\"No active round\\\");\\n        require(block.timestamp <= rounds[currentRoundId].endTime, \\\"Round has ended\\\");\\n        \\n        // Create advertisement\\n        Advertisement memory newAd = Advertisement({\\n            advertiser: msg.sender,\\n            amount: msg.value,\\n            adContent: _adContent,\\n            brandName: _brandName,\\n            timestamp: block.timestamp,\\n            isActive: true,\\n            roundId: currentRoundId\\n        });\\n        \\n        // Add to current round\\n        roundAds[currentRoundId].push(newAd);\\n        rounds[currentRoundId].totalAdPool += msg.value;\\n        \\n        // Calculate prize pool (70% of ad payment)\\n        uint256 prizeContribution = (msg.value * PRIZE_PERCENTAGE) / 100;\\n        uint256 platformContribution = (msg.value * PLATFORM_FEE_PERCENTAGE) / 100;\\n        \\n        rounds[currentRoundId].prizePool += prizeContribution;\\n        rounds[currentRoundId].platformFee += platformContribution;\\n        \\n        emit AdRegistered(msg.sender, msg.value, currentRoundId, _brandName);\\n    }\\n    \\n    // Submit score during active round\\n    function submitScore(\\n        uint256 _score,\\n        bool _civicVerified,\\n        string memory _playerName\\n    ) external onlyActiveRound returns (uint256 finalScore) {\\n        require(_score > 0, \\\"Score must be positive\\\");\\n        \\n        // Calculate final score with Civic bonus\\n        if (_civicVerified) {\\n            finalScore = (_score * CIVIC_BONUS_MULTIPLIER) / BASE_MULTIPLIER;\\n        } else {\\n            finalScore = _score;\\n        }\\n        \\n        // Create player score record\\n        PlayerScore memory newScore = PlayerScore({\\n            player: msg.sender,\\n            score: finalScore,\\n            roundId: currentRoundId,\\n            civicVerified: _civicVerified,\\n            timestamp: block.timestamp\\n        });\\n        \\n        // Add to round scores\\n        roundScores[currentRoundId].push(newScore);\\n        rounds[currentRoundId].playerCount++;\\n        \\n        // Update player stats\\n        PlayerStats storage stats = playerStats[msg.sender];\\n        stats.totalGames++;\\n        stats.totalScore += finalScore;\\n        stats.civicVerified = _civicVerified;\\n        \\n        if (finalScore > stats.highScore) {\\n            stats.highScore = finalScore;\\n        }\\n        \\n        emit ScoreSubmitted(msg.sender, _score, currentRoundId, _civicVerified);\\n        \\n        return finalScore;\\n    }\\n    \\n    // End current round and determine winner\\n    function endRound() external {\\n        require(rounds[currentRoundId].isActive, \\\"No active round\\\");\\n        require(\\n            block.timestamp > rounds[currentRoundId].endTime || \\n            rounds[currentRoundId].playerCount > 0,\\n            \\\"Round not ready to end\\\"\\n        );\\n        \\n        GameRound storage round = rounds[currentRoundId];\\n        round.isActive = false;\\n        \\n        // Find winner if there are players\\n        if (round.playerCount > 0 && round.prizePool > 0) {\\n            PlayerScore[] memory scores = roundScores[currentRoundId];\\n            address winner = address(0);\\n            uint256 highestScore = 0;\\n            \\n            for (uint256 i = 0; i < scores.length; i++) {\\n                if (scores[i].score > highestScore) {\\n                    highestScore = scores[i].score;\\n                    winner = scores[i].player;\\n                }\\n            }\\n            \\n            if (winner != address(0)) {\\n                round.winner = winner;\\n                round.winningScore = highestScore;\\n                \\n                // Transfer prize to winner\\n                playerBalances[winner] += round.prizePool;\\n                playerStats[winner].totalWinnings += round.prizePool;\\n                \\n                emit PrizeClaimed(winner, round.prizePool);\\n            }\\n        }\\n        \\n        // Collect platform fee\\n        if (round.platformFee > 0) {\\n            totalPlatformFees += round.platformFee;\\n            emit PlatformFeeCollected(round.platformFee);\\n        }\\n        \\n        emit RoundEnded(currentRoundId, round.winner, round.prizePool, round.platformFee);\\n        \\n        // Start new round\\n        _startNewRound();\\n    }\\n    \\n    // Start new round\\n    function _startNewRound() internal {\\n        currentRoundId++;\\n        rounds[currentRoundId] = GameRound({\\n            roundId: currentRoundId,\\n            startTime: block.timestamp,\\n            endTime: block.timestamp + ROUND_DURATION,\\n            totalAdPool: 0,\\n            prizePool: 0,\\n            platformFee: 0,\\n            winner: address(0),\\n            winningScore: 0,\\n            isActive: true,\\n            playerCount: 0\\n        });\\n        \\n        emit RoundStarted(currentRoundId, block.timestamp, block.timestamp + ROUND_DURATION);\\n    }\\n    \\n    // Claim prize (if any)\\n    function claimPrize() external {\\n        uint256 amount = playerBalances[msg.sender];\\n        require(amount > 0, \\\"No prize to claim\\\");\\n        \\n        playerBalances[msg.sender] = 0;\\n        payable(msg.sender).transfer(amount);\\n        \\n        emit PrizeClaimed(msg.sender, amount);\\n    }\\n    \\n    // Update Civic verification status\\n    function updateCivicVerification(bool verified) external {\\n        playerStats[msg.sender].civicVerified = verified;\\n        emit CivicVerificationUpdated(msg.sender, verified);\\n    }\\n    \\n    // View functions\\n    function getCurrentPrizePool() external view returns (uint256) {\\n        return rounds[currentRoundId].prizePool;\\n    }\\n    \\n    function getCurrentRoundInfo() external view returns (\\n        uint256 roundId,\\n        uint256 startTime,\\n        uint256 endTime,\\n        uint256 totalAdPool,\\n        uint256 prizePool,\\n        uint256 playerCount,\\n        bool isActive\\n    ) {\\n        GameRound memory round = rounds[currentRoundId];\\n        return (\\n            round.roundId,\\n            round.startTime,\\n            round.endTime,\\n            round.totalAdPool,\\n            round.prizePool,\\n            round.playerCount,\\n            round.isActive\\n        );\\n    }\\n    \\n    function getRoundDifficulty(uint256 _roundId) external view returns (string memory) {\\n        GameRound memory round = rounds[_roundId];\\n        if (round.totalAdPool == 0) return \\\"Easy\\\";\\n        if (round.totalAdPool < 0.001 ether) return \\\"Medium\\\";\\n        if (round.totalAdPool < 0.01 ether) return \\\"Hard\\\";\\n        return \\\"EXTREME\\\";\\n    }\\n    \\n    function getActivePlayersCount() external view returns (uint256) {\\n        return rounds[currentRoundId].playerCount;\\n    }\\n    \\n    function getRoundAds(uint256 _roundId) external view returns (Advertisement[] memory) {\\n        return roundAds[_roundId];\\n    }\\n    \\n    function getRoundScores(uint256 _roundId) external view returns (PlayerScore[] memory) {\\n        return roundScores[_roundId];\\n    }\\n    \\n    function getPlayerStats(address player) external view returns (PlayerStats memory) {\\n        return playerStats[player];\\n    }\\n    \\n    function getPlayerBalance(address player) external view returns (uint256) {\\n        return playerBalances[player];\\n    }\\n    \\n    // Emergency functions (owner only)\\n    function pauseRound() external onlyOwner {\\n        rounds[currentRoundId].isActive = false;\\n    }\\n    \\n    function withdrawPlatformFees() external onlyOwner {\\n        uint256 amount = totalPlatformFees;\\n        totalPlatformFees = 0;\\n        payable(owner).transfer(amount);\\n    }\\n    \\n    // Fallback to receive ETH\\n    receive() external payable {}\\n}\\n\",\"keccak256\":\"0x3a00e4098cefef440f55fc005b394bc235abc003cff3ba1f1f91f453b1d14ddc\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50600680546001600160a01b031916331790556200002e62000034565b620001dc565b600580549060006200004683620001a4565b9190505550604051806101400160405280600554815260200142815260200161012c42620000759190620001c0565b81526000602080830182905260408084018390526060808501849052608080860185905260a0808701869052600160c080890182905260e0988901889052600580548952888852978690208a518155968a0151918701919091559388015160028601559187015160038501558601516004840155850151828401558401516006820180546001600160a01b0319166001600160a01b0390921691909117905591830151600783015561010083015160088301805460ff191691151591909117905561012090920151600990910155547fa359b664a68acd8839e42112eb50eff3408165e15074fde89ddb58a0db2e691d426200017461012c82620001c0565b6040805192835260208301919091520160405180910390a2565b634e487b7160e01b600052601160045260246000fd5b600060018201620001b957620001b96200018e565b5060010190565b80820180821115620001d657620001d66200018e565b92915050565b6120ba80620001ec6000396000f3fe6080604052600436106101d15760003560e01c80637b38314c116100f7578063aeb85eea11610095578063d3631fa511610064578063d3631fa51461075c578063e2734c9314610772578063fa3f2897146107a8578063fdcbb95f146107d557600080fd5b8063aeb85eea14610684578063cdafbbb6146106b1578063ceb34f711461072c578063d0b7830b1461074757600080fd5b80638da5cb5b116100d15780638da5cb5b1461060e5780639cbe5efd146106465780639d0e68f91461065c578063a2b443931461066f57600080fd5b80637b38314c146104f55780638186f418146105225780638c65c81f1461053d57600080fd5b80634fd66eae1161016f57806370740ac91161013e57806370740ac9146103cd578063747dff42146103e2578063749aa2d9146104cb57806374b064aa146104e057600080fd5b80634fd66eae146102d857806355e93ede1461033c5780636641ea081461036357806368ed92f01461037957600080fd5b80632cbb802d116101ab5780632cbb802d1461023c57806333f8aba7146102695780633e4d94b81461029057806347072bdc146102a557600080fd5b806315548232146101dd578063156f58af14610205578063246296511461021c57600080fd5b366101d857005b600080fd5b3480156101e957600080fd5b506101f2601e81565b6040519081526020015b60405180910390f35b34801561021157600080fd5b5061021a6107f5565b005b34801561022857600080fd5b506101f2610237366004611adf565b610846565b34801561024857600080fd5b5061025c610257366004611b36565b610aa9565b6040516101fc9190611b4f565b34801561027557600080fd5b506005546000908152602081905260409020600901546101f2565b34801561029c57600080fd5b506101f2609681565b3480156102b157600080fd5b506102c56102c0366004611bc8565b610b55565b6040516101fc9796959493929190611c30565b3480156102e457600080fd5b506102f86102f3366004611c89565b610cd1565b6040516101fc9190600060a0820190508251825260208301516020830152604083015160408301526060830151151560608301526080830151608083015292915050565b34801561034857600080fd5b506005546000908152602081905260409020600401546101f2565b34801561036f57600080fd5b506101f261012c81565b34801561038557600080fd5b50610399610394366004611bc8565b610d61565b604080516001600160a01b03909616865260208601949094529284019190915215156060830152608082015260a0016101fc565b3480156103d957600080fd5b5061021a610dbc565b3480156103ee57600080fd5b5061049460058054600090815260208181526040918290208251610140810184528154808252600183015493820184905260028301549482018590526003830154606083018190526004840154608084018190529684015460a084015260068401546001600160a01b031660c0840152600784015460e0840152600884015460ff1615156101008401819052600990940154610120909301839052909693959093909290565b604080519788526020880196909652948601939093526060850191909152608084015260a0830152151560c082015260e0016101fc565b3480156104d757600080fd5b5061021a610e82565b3480156104ec57600080fd5b506101f2604681565b34801561050157600080fd5b506101f2610510366004611c89565b60046020526000908152604090205481565b34801561052e57600080fd5b506101f2660aa87bee53800081565b34801561054957600080fd5b506105b9610558366004611b36565b60006020819052908152604090208054600182015460028301546003840154600485015460058601546006870154600788015460088901546009909901549798969795969495939492936001600160a01b0390921692909160ff909116908a565b604080519a8b5260208b0199909952978901969096526060880194909452608087019290925260a08601526001600160a01b031660c085015260e08401521515610100830152610120820152610140016101fc565b34801561061a57600080fd5b5060065461062e906001600160a01b031681565b6040516001600160a01b0390911681526020016101fc565b34801561065257600080fd5b506101f260055481565b61021a61066a366004611cb9565b611241565b34801561067b57600080fd5b506101f2606481565b34801561069057600080fd5b506106a461069f366004611b36565b6114f2565b6040516101fc9190611d1d565b3480156106bd57600080fd5b506107026106cc366004611c89565b60036020819052600091825260409091208054600182015460028301549383015460049093015491939092909160ff9091169085565b6040805195865260208601949094529284019190915215156060830152608082015260a0016101fc565b34801561073857600080fd5b506101f2660110d9316ec00081565b34801561075357600080fd5b5061021a61163a565b34801561076857600080fd5b506101f260075481565b34801561077e57600080fd5b506101f261078d366004611c89565b6001600160a01b031660009081526004602052604090205490565b3480156107b457600080fd5b506107c86107c3366004611b36565b6116ad565b6040516101fc9190611d30565b3480156107e157600080fd5b5061021a6107f0366004611df7565b611881565b6006546001600160a01b031633146108285760405162461bcd60e51b815260040161081f90611e12565b60405180910390fd5b6005546000908152602081905260409020600801805460ff19169055565b60055460009081526020819052604081206008015460ff1661087a5760405162461bcd60e51b815260040161081f90611e53565b6005546000908152602081905260409020600201544211156108d05760405162461bcd60e51b815260206004820152600f60248201526e149bdd5b99081a185cc8195b991959608a1b604482015260640161081f565b600084116109195760405162461bcd60e51b815260206004820152601660248201527553636f7265206d75737420626520706f73697469766560501b604482015260640161081f565b821561093d57606461092c609686611e92565b6109369190611eaf565b9050610940565b50825b6040805160a08101825233815260208082018481526005805484860181815289151560608701908152426080880190815260009384526001808852898520805480830182559086528886208a519188020180546001600160a01b0319166001600160a01b03909216919091178155965190870155915160028601555160038501805460ff19169115159190911790555160049093019290925554815290819052918220600901805491926109f383611ed1565b9091555050336000908152600360205260408120805490918290610a1683611ed1565b919050555082816002016000828254610a2f9190611eea565b909155505060038101805460ff19168615151790556001810154831115610a5857600181018390555b6005546040805188815260208101929092528615159082015233907f45a39fed8f514979c370a7247ccd91746b805e7f584159ae94f3b01d34b44f469060600160405180910390a250509392505050565b606060016000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610b4a5760008481526020908190206040805160a0810182526005860290920180546001600160a01b0316835260018082015484860152600282015492840192909252600381015460ff16151560608401526004015460808301529083529092019101610ade565b505050509050919050565b60026020528160005260406000208181548110610b7157600080fd5b60009182526020909120600790910201805460018201546002830180546001600160a01b03909316955090935090610ba890611efd565b80601f0160208091040260200160405190810160405280929190818152602001828054610bd490611efd565b8015610c215780601f10610bf657610100808354040283529160200191610c21565b820191906000526020600020905b815481529060010190602001808311610c0457829003601f168201915b505050505090806003018054610c3690611efd565b80601f0160208091040260200160405190810160405280929190818152602001828054610c6290611efd565b8015610caf5780601f10610c8457610100808354040283529160200191610caf565b820191906000526020600020905b815481529060010190602001808311610c9257829003601f168201915b50505050600483015460058401546006909401549293909260ff909116915087565b610d056040518060a00160405280600081526020016000815260200160008152602001600015158152602001600081525090565b506001600160a01b0316600090815260036020818152604092839020835160a081018552815481526001820154928101929092526002810154938201939093529082015460ff1615156060820152600490910154608082015290565b60016020528160005260406000208181548110610d7d57600080fd5b6000918252602090912060059091020180546001820154600283015460038401546004909401546001600160a01b0390931695509093509160ff169085565b3360009081526004602052604090205480610e0d5760405162461bcd60e51b81526020600482015260116024820152704e6f207072697a6520746f20636c61696d60781b604482015260640161081f565b336000818152600460205260408082208290555183156108fc0291849190818181858888f19350505050158015610e48573d6000803e3d6000fd5b5060405181815233907f95681e512bc0fe659e195e06c283eada494316f3d801213e48e7101af92bf770906020015b60405180910390a250565b60055460009081526020819052604090206008015460ff16610eb65760405162461bcd60e51b815260040161081f90611e53565b600554600090815260208190526040902060020154421180610eeb575060055460009081526020819052604090206009015415155b610f305760405162461bcd60e51b8152602060048201526016602482015275149bdd5b99081b9bdd081c9958591e481d1bc8195b9960521b604482015260640161081f565b600554600090815260208190526040902060088101805460ff19169055600981015415801590610f64575060008160040154115b1561117a576000600160006005548152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561100c5760008481526020908190206040805160a0810182526005860290920180546001600160a01b0316835260018082015484860152600282015492840192909252600381015460ff16151560608401526004015460808301529083529092019101610fa0565b50505050905060008060005b8351811015611099578184828151811061103457611034611f37565b60200260200101516020015111156110875783818151811061105857611058611f37565b602002602001015160200151915083818151811061107857611078611f37565b60200260200101516000015192505b8061109181611ed1565b915050611018565b506001600160a01b03821615611176576006840180546001600160a01b0319166001600160a01b038416908117909155600785018290556004808601546000928352602091909152604082208054919290916110f6908490611eea565b90915550506004808501546001600160a01b038416600090815260036020526040812090920180549192909161112d908490611eea565b909155505060048401546040519081526001600160a01b038316907f95681e512bc0fe659e195e06c283eada494316f3d801213e48e7101af92bf7709060200160405180910390a25b5050505b6005810154156111d85780600501546007600082825461119a9190611eea565b909155505060058101546040519081527f1e78db4c4ee9ca4946fb3ee60599d1e0258a8b22e183510241ff770ab6332baf9060200160405180910390a15b600580546006830154600484015492840154604080516001600160a01b039093168352602083019490945281840152915190917f27204cd9208d6f69d2ec3166c5141707a7e6d8907a43ec5dfd33eb4f4f8ed533919081900360600190a261123e6118d3565b50565b660110d9316ec0003410156112905760405162461bcd60e51b81526020600482015260156024820152745061796d656e742062656c6f77206d696e696d756d60581b604482015260640161081f565b60055460009081526020819052604090206008015460ff166112c45760405162461bcd60e51b815260040161081f90611e53565b60055460009081526020819052604090206002015442111561131a5760405162461bcd60e51b815260206004820152600f60248201526e149bdd5b99081a185cc8195b991959608a1b604482015260640161081f565b6040805160e08101825233815234602080830191825282840185815260608401879052426080850152600160a0850181905260055460c086018190526000908152600280855296812080548084018255908252939020855160079094020180546001600160a01b0319166001600160a01b03909416939093178355925192820192909255905191928392908201906113b29082611f9c565b50606082015160038201906113c79082611f9c565b506080820151600482015560a08201516005808301805460ff19169215159290921790915560c090920151600690910155546000908152602081905260408120600301805434929061141a908490611eea565b9091555060009050606461142f604634611e92565b6114399190611eaf565b90506000606461144a601e34611e92565b6114549190611eaf565b9050816000806005548152602001908152602001600020600401600082825461147d9190611eea565b909155505060058054600090815260208190526040812090910180548392906114a7908490611eea565b909155505060055460405133917f097704386cf5a321f0e59523c7735778f70e9f4e2d3cf9659951005f76099576916114e39134918a9061205c565b60405180910390a25050505050565b600081815260208181526040808320815161014081018352815481526001820154938101939093526002810154918301919091526003810154606083810182905260048301546080850152600583015460a085015260068301546001600160a01b031660c0850152600783015460e0850152600883015460ff1615156101008501526009909201546101208401529092036115a95750506040805180820190915260048152634561737960e01b6020820152919050565b66038d7ea4c68000816060015110156115e05750506040805180820190915260068152654d656469756d60d01b6020820152919050565b662386f26fc100008160600151101561161557505060408051808201909152600481526312185c9960e21b6020820152919050565b505060408051808201909152600781526645585452454d4560c81b6020820152919050565b6006546001600160a01b031633146116645760405162461bcd60e51b815260040161081f90611e12565b6007805460009182905560065460405191926001600160a01b039091169183156108fc0291849190818181858888f193505050501580156116a9573d6000803e3d6000fd5b5050565b606060026000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610b4a5760008481526020908190206040805160e0810182526007860290920180546001600160a01b031683526001810154938301939093526002830180549293929184019161173590611efd565b80601f016020809104026020016040519081016040528092919081815260200182805461176190611efd565b80156117ae5780601f10611783576101008083540402835291602001916117ae565b820191906000526020600020905b81548152906001019060200180831161179157829003601f168201915b505050505081526020016003820180546117c790611efd565b80601f01602080910402602001604051908101604052809291908181526020018280546117f390611efd565b80156118405780601f1061181557610100808354040283529160200191611840565b820191906000526020600020905b81548152906001019060200180831161182357829003601f168201915b50505091835250506004820154602080830191909152600583015460ff161515604083015260069092015460609091015290825260019290920191016116e2565b33600081815260036020818152604092839020909101805460ff191685151590811790915591519182527fab8b59ebf730811031054120c42a8bde4822881593240eeef974a3766ea955c99101610e77565b600580549060006118e383611ed1565b9190505550604051806101400160405280600554815260200142815260200161012c426119109190611eea565b81526000602080830182905260408084018390526060808501849052608080860185905260a0808701869052600160c080890182905260e0988901889052600580548952888852978690208a518155968a0151918701919091559388015160028601559187015160038501558601516004840155850151828401558401516006820180546001600160a01b0319166001600160a01b0390921691909117905591830151600783015561010083015160088301805460ff191691151591909117905561012090920151600990910155547fa359b664a68acd8839e42112eb50eff3408165e15074fde89ddb58a0db2e691d42611a0d61012c82611eea565b6040805192835260208301919091520160405180910390a2565b80358015158114611a3757600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611a6357600080fd5b813567ffffffffffffffff80821115611a7e57611a7e611a3c565b604051601f8301601f19908116603f01168101908282118183101715611aa657611aa6611a3c565b81604052838152866020858801011115611abf57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215611af457600080fd5b83359250611b0460208501611a27565b9150604084013567ffffffffffffffff811115611b2057600080fd5b611b2c86828701611a52565b9150509250925092565b600060208284031215611b4857600080fd5b5035919050565b602080825282518282018190526000919060409081850190868401855b82811015611bbb57815180516001600160a01b03168552868101518786015285810151868601526060808201511515908601526080908101519085015260a09093019290850190600101611b6c565b5091979650505050505050565b60008060408385031215611bdb57600080fd5b50508035926020909101359150565b6000815180845260005b81811015611c1057602081850181015186830182015201611bf4565b506000602082860101526020601f19601f83011685010191505092915050565b60018060a01b038816815286602082015260e060408201526000611c5760e0830188611bea565b8281036060840152611c698188611bea565b6080840196909652505091151560a083015260c090910152949350505050565b600060208284031215611c9b57600080fd5b81356001600160a01b0381168114611cb257600080fd5b9392505050565b60008060408385031215611ccc57600080fd5b823567ffffffffffffffff80821115611ce457600080fd5b611cf086838701611a52565b93506020850135915080821115611d0657600080fd5b50611d1385828601611a52565b9150509250929050565b602081526000611cb26020830184611bea565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015611de957888303603f19018552815180516001600160a01b0316845287810151888501528681015160e088860181905290611d9882870182611bea565b91505060608083015186830382880152611db28382611bea565b6080858101519089015260a08086015115159089015260c09485015194909701939093525050509386019390860190600101611d57565b509098975050505050505050565b600060208284031215611e0957600080fd5b611cb282611a27565b60208082526021908201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6040820152603760f91b606082015260800190565b6020808252600f908201526e139bc81858dd1a5d99481c9bdd5b99608a1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417611ea957611ea9611e7c565b92915050565b600082611ecc57634e487b7160e01b600052601260045260246000fd5b500490565b600060018201611ee357611ee3611e7c565b5060010190565b80820180821115611ea957611ea9611e7c565b600181811c90821680611f1157607f821691505b602082108103611f3157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b601f821115611f9757600081815260208120601f850160051c81016020861015611f745750805b601f850160051c820191505b81811015611f9357828155600101611f80565b5050505b505050565b815167ffffffffffffffff811115611fb657611fb6611a3c565b611fca81611fc48454611efd565b84611f4d565b602080601f831160018114611fff5760008415611fe75750858301515b600019600386901b1c1916600185901b178555611f93565b600085815260208120601f198616915b8281101561202e5788860151825594840194600190910190840161200f565b508582101561204c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b83815282602082015260606040820152600061207b6060830184611bea565b9594505050505056fea26469706673582212202e7732f592f564ce1e1f696f23d7e09e120bd95bf3f33284d7aa4adca9075ac264736f6c63430008140033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 64,
        "contract": "contracts/BrandCrusherV2.sol:BrandCrusherV2",
        "label": "rounds",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_uint256,t_struct(GameRound)37_storage)"
      },
      {
        "astId": 70,
        "contract": "contracts/BrandCrusherV2.sol:BrandCrusherV2",
        "label": "roundScores",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_array(t_struct(PlayerScore)48_storage)dyn_storage)"
      },
      {
        "astId": 76,
        "contract": "contracts/BrandCrusherV2.sol:BrandCrusherV2",
        "label": "roundAds",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_array(t_struct(Advertisement)16_storage)dyn_storage)"
      },
      {
        "astId": 81,
        "contract": "contracts/BrandCrusherV2.sol:BrandCrusherV2",
        "label": "playerStats",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_struct(PlayerStats)59_storage)"
      },
      {
        "astId": 85,
        "contract": "contracts/BrandCrusherV2.sol:BrandCrusherV2",
        "label": "playerBalances",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 87,
        "contract": "contracts/BrandCrusherV2.sol:BrandCrusherV2",
        "label": "currentRoundId",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 110,
        "contract": "contracts/BrandCrusherV2.sol:BrandCrusherV2",
        "label": "owner",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 112,
        "contract": "contracts/BrandCrusherV2.sol:BrandCrusherV2",
        "label": "totalPlatformFees",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Advertisement)16_storage)dyn_storage": {
        "base": "t_struct(Advertisement)16_storage",
        "encoding": "dynamic_array",
        "label": "struct BrandCrusherV2.Advertisement[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(PlayerScore)48_storage)dyn_storage": {
        "base": "t_struct(PlayerScore)48_storage",
        "encoding": "dynamic_array",
        "label": "struct BrandCrusherV2.PlayerScore[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(PlayerStats)59_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct BrandCrusherV2.PlayerStats)",
        "numberOfBytes": "32",
        "value": "t_struct(PlayerStats)59_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_array(t_struct(Advertisement)16_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct BrandCrusherV2.Advertisement[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(Advertisement)16_storage)dyn_storage"
      },
      "t_mapping(t_uint256,t_array(t_struct(PlayerScore)48_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct BrandCrusherV2.PlayerScore[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(PlayerScore)48_storage)dyn_storage"
      },
      "t_mapping(t_uint256,t_struct(GameRound)37_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct BrandCrusherV2.GameRound)",
        "numberOfBytes": "32",
        "value": "t_struct(GameRound)37_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Advertisement)16_storage": {
        "encoding": "inplace",
        "label": "struct BrandCrusherV2.Advertisement",
        "members": [
          {
            "astId": 3,
            "contract": "contracts/BrandCrusherV2.sol:BrandCrusherV2",
            "label": "advertiser",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 5,
            "contract": "contracts/BrandCrusherV2.sol:BrandCrusherV2",
            "label": "amount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 7,
            "contract": "contracts/BrandCrusherV2.sol:BrandCrusherV2",
            "label": "adContent",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 9,
            "contract": "contracts/BrandCrusherV2.sol:BrandCrusherV2",
            "label": "brandName",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 11,
            "contract": "contracts/BrandCrusherV2.sol:BrandCrusherV2",
            "label": "timestamp",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 13,
            "contract": "contracts/BrandCrusherV2.sol:BrandCrusherV2",
            "label": "isActive",
            "offset": 0,
            "slot": "5",
            "type": "t_bool"
          },
          {
            "astId": 15,
            "contract": "contracts/BrandCrusherV2.sol:BrandCrusherV2",
            "label": "roundId",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_struct(GameRound)37_storage": {
        "encoding": "inplace",
        "label": "struct BrandCrusherV2.GameRound",
        "members": [
          {
            "astId": 18,
            "contract": "contracts/BrandCrusherV2.sol:BrandCrusherV2",
            "label": "roundId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 20,
            "contract": "contracts/BrandCrusherV2.sol:BrandCrusherV2",
            "label": "startTime",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 22,
            "contract": "contracts/BrandCrusherV2.sol:BrandCrusherV2",
            "label": "endTime",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 24,
            "contract": "contracts/BrandCrusherV2.sol:BrandCrusherV2",
            "label": "totalAdPool",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 26,
            "contract": "contracts/BrandCrusherV2.sol:BrandCrusherV2",
            "label": "prizePool",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 28,
            "contract": "contracts/BrandCrusherV2.sol:BrandCrusherV2",
            "label": "platformFee",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 30,
            "contract": "contracts/BrandCrusherV2.sol:BrandCrusherV2",
            "label": "winner",
            "offset": 0,
            "slot": "6",
            "type": "t_address"
          },
          {
            "astId": 32,
            "contract": "contracts/BrandCrusherV2.sol:BrandCrusherV2",
            "label": "winningScore",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 34,
            "contract": "contracts/BrandCrusherV2.sol:BrandCrusherV2",
            "label": "isActive",
            "offset": 0,
            "slot": "8",
            "type": "t_bool"
          },
          {
            "astId": 36,
            "contract": "contracts/BrandCrusherV2.sol:BrandCrusherV2",
            "label": "playerCount",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "320"
      },
      "t_struct(PlayerScore)48_storage": {
        "encoding": "inplace",
        "label": "struct BrandCrusherV2.PlayerScore",
        "members": [
          {
            "astId": 39,
            "contract": "contracts/BrandCrusherV2.sol:BrandCrusherV2",
            "label": "player",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 41,
            "contract": "contracts/BrandCrusherV2.sol:BrandCrusherV2",
            "label": "score",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 43,
            "contract": "contracts/BrandCrusherV2.sol:BrandCrusherV2",
            "label": "roundId",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 45,
            "contract": "contracts/BrandCrusherV2.sol:BrandCrusherV2",
            "label": "civicVerified",
            "offset": 0,
            "slot": "3",
            "type": "t_bool"
          },
          {
            "astId": 47,
            "contract": "contracts/BrandCrusherV2.sol:BrandCrusherV2",
            "label": "timestamp",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(PlayerStats)59_storage": {
        "encoding": "inplace",
        "label": "struct BrandCrusherV2.PlayerStats",
        "members": [
          {
            "astId": 50,
            "contract": "contracts/BrandCrusherV2.sol:BrandCrusherV2",
            "label": "totalGames",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 52,
            "contract": "contracts/BrandCrusherV2.sol:BrandCrusherV2",
            "label": "highScore",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 54,
            "contract": "contracts/BrandCrusherV2.sol:BrandCrusherV2",
            "label": "totalScore",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 56,
            "contract": "contracts/BrandCrusherV2.sol:BrandCrusherV2",
            "label": "civicVerified",
            "offset": 0,
            "slot": "3",
            "type": "t_bool"
          },
          {
            "astId": 58,
            "contract": "contracts/BrandCrusherV2.sol:BrandCrusherV2",
            "label": "totalWinnings",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}